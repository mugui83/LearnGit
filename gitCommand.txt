git init : init a new repository.
git add file.name : add a new file into repository.
git commit -m "commit message" : commit all files with commit message.
git status : see the status of git.
git diff file.name :view the diff of the file.
git diff HEAD -- file : 查看工作区和版本库里面最新版本的区别
git checkout -- file : 丢弃工作区的修改
git reset HEAD file : 把暂存区的修改撤销掉（unstage）
git log : view the log.
git reflog : view the all log.
git reset --hard HEAD^ : reset the last.
git rm file : 删除一个文件
ssh-keygen -t rsa -C "youremail@example.com" : 创建ssh Key

echo # LearnGit >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/mugui83/LearnGit.git
git push -u origin master

push an existing repository from the command line
git remote add origin https://github.com/mugui83/LearnGit.git
git push -u origin master
git push origin master

git clone https://github.com/mugui83/GitSkills.git

查看分支：git branch
创建分支：git branch <name>
切换分支：git checkout <name>
创建+切换分支：git checkout -b <name>
合并某分支到当前分支：git merge <name>
删除分支：git branch -d <name>
强行删除分支: git branch -D <name> 如果这个分支从未合并过
git log --graph --pretty=oneline --abbrev-commit : 可以看到分支合并图。

$ git merge --no-ff -m "merge with no-ff" dev : 合并dev分支，请注意--no-ff参数，表示禁用Fast forward.  
--no-ff参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而fast forward合并就看不出来曾经做过合并。

git stash 把当前工作现场“储藏”起来
git stash list 查看临时工作区
git stash apply [index] 恢复指定临时工作区
git stash pop [index] 恢复指定临时工作区并删除临时工作区

查看远程库信息，使用git remote -v；
本地新建的分支如果不推送到远程，对其他人就是不可见的；
从本地推送分支，使用git push origin branch-name，如果推送失败，先用git pull抓取远程的新提交；
在本地创建和远程分支对应的分支，使用git checkout -b branch-name origin/branch-name，本地和远程分支的名称最好一致；
建立本地分支和远程分支的关联，使用git branch --set-upstream branch-name origin/branch-name；
从远程抓取分支，使用git pull，如果有冲突，要先处理冲突。

命令git tag <name>用于新建一个标签，默认为HEAD，也可以指定一个commit id: git tag <name> [commit Id]
git tag -a <tagname> -m "blablabla..."可以指定标签信息；
git tag -s <tagname> -m "blablabla..."可以用PGP签名标签；
命令git tag可以查看所有标签。

命令git push origin <tagname>可以推送一个本地标签；
命令git push origin --tags可以推送全部未推送过的本地标签；
命令git tag -d <tagname>可以删除一个本地标签；
命令git push origin :refs/tags/<tagname>可以删除一个远程标签。

忽略某些文件时，需要编写.gitignore；
.gitignore文件本身要放到版本库里，并且可以对.gitignore做版本管理！

